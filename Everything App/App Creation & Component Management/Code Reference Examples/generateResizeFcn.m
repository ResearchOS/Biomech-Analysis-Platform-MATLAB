function [resizeFcn]=generateResizeFcn(userData)

%% PURPOSE: GENERATE THE OUTLINE OF THE RESIZE FUNCTION BASED ON THE USERDATA STRUCT PROVIDED
% Inputs:
% userData: Struct with each field name representing one object's tag, and the field containing one object in the GUI (struct)

% Outputs:
% resizeFcn: The text of the resizeFcn, where each element of the array is one line of the fcn (cell array of chars)

%% NOTE: DOES NOT OVERWRITE THE FUNCTION DECLARATION LINE OR THE PURPOSE COMMENT IN THE RESIZE FCN
resizeFcn={'data=src.UserData; % Get UserData to access components.';...
'if isempty(data)';...
'    return; % Called on uifigure creation';...
'end';...
'';...
'% Modify component location';...
'figSize=src.Position(3:4); % Width x height';...
'';...
'% Identify the ratio of font size to figure height (will likely be different for each computer). Used to scale the font size.';...
'fig=ancestor(src,''figure'',''toplevel'');';...
'ancSize=fig.Position(3:4);';...
'defaultPos=get(0,''defaultfigureposition'');';...
'if isequal(ancSize,defaultPos(3:4)) % If currently in default figure size'
'    if ~isempty(getappdata(fig,''fontSizeRelToHeight'')) % If the figure has been restored to default size after previously being resized.';...
'        fontSizeRelToHeight=getappdata(fig,''fontSizeRelToHeight''); % Get the original ratio.';...
'    else % Figure initialized as default size';...
'        initFontSize=get(data.LogsheetPathField,''FontSize''); % Get the initial font size';...
'        fontSizeRelToHeight=initFontSize/ancSize(2); % Font size relative to figure height.';...
'        setappdata(fig,''fontSizeRelToHeight'',fontSizeRelToHeight); % Store the font size relative to figure height.';...
'    end ';...  
'else';...
'    fontSizeRelToHeight=getappdata(fig,''fontSizeRelToHeight'');';...
'end';...
'';...
'% Set new font size';...
'newFontSize=round(fontSizeRelToHeight*ancSize(2)); % Multiply relative font size by the figure''s height';...

'if newFontSize>20';...
'    newFontSize=20; % Cap the font size (and therefore the text box/button sizes too)';...
'end';...
'';...
'%% Positions specified as relative to tab width & height';...
'% All positions here are specified as relative positions'};

%% Get the objects from the user data
names=fieldnames(userData);

%% Relative positions
for i=1:length(names)
    name=names{i};
    relPos{i}=[name 'RelPos'];
    relPosStr={[relPos{i} '=[0.5 0.5];']};
    resizeFcn=[resizeFcn; relPosStr];
end

%% Sizes
newLines={'';...
'%% Component width specified relative to tab width, height is in absolute units (constant).';...
'% All component dimensions here are specified as absolute sizes (pixels)';...
'compHeight=round(1.67*newFontSize); % Set the component heights that involve single lines of text}'};

resizeFcn=[resizeFcn; newLines];

for i=1:length(names)
    name=names{i};
    sizes{i}=[name 'Size'];
    sizeStr={[sizes{i} '=[0.2 compHeight];']};
    resizeFcn=[resizeFcn; sizeStr];
end

%% Compute actual positions
newLines={'';...
'%% Multiply the relative positions by the figure size to get the actual position.}'};

resizeFcn=[resizeFcn; newLines];

for i=1:length(names)
    name=names{i};
    pos{i}=[name 'Pos'];
    posStr={[pos{i} '=round([' relPos{i} '.*figSize ' sizes{i} '(1)*figSize(1) ' sizes{i} '(2)]);']};
    resizeFcn=[resizeFcn; posStr];
end

%% Set actual positions
newLines={'';...
'%% Set the actual positions for each component'};

for i=1:length(names)
    name=names{i};
    resizeFcn=[resizeFcn; {['data.' name '.Position=' pos{i} ';']}];
end

%% Set font sizes
newLines={'';...
'%% Set the font sizes for all components that use text'};

for i=1:length(names)
    name=names{i};
    resizeFcn=[resizeFcn; {['data.' name '.FontSize=newFontSize;']}];
end