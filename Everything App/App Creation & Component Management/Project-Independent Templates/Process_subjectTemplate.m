function [dataStruct]=Process_subjectTemplate(projInfo,dataStruct,currSubTrialsList,args)

%% PURPOSE: TEMPLATE FOR TRIAL-LEVEL PROCESSING FUNCTIONS
% Inputs:
% projInfo: Project-level info (struct) MANDATORY
% dataStruct: Data & info for one subject (struct) MANDATORY
% currSubTrialsList: List of all trial names of interest for one subject (cell array of chars) MANDATORY
% args: Other arguments, as specified here in the nargin=0 block. OPTIONAL

%% Setup before running
if nargin==0
    dataStruct.Level='S'; % Indicates trial level function
    dataStruct.Args="''";
    return;
end

% Get the name of this calling function.
st=dbstack;
fName=st(1).name;

%% Check for subject-level processing done, if applicable.
% USE THE FIELD AND METHOD BEING GENERATED BY THIS FUNCTION TO CHECK IF IT'S ALREADY BEEN DONE.
if isfield(dataStruct.Info,'ProcessedDone') && isfield(dataStruct.Info.ProcessedDone,fName) && dataStruct.Info.ProcessedDone.(fName)==1 && projInfo.Flags.Redo==0
    disp(['SKIPPING ' fName ' SUBJECT ' dataStruct.Info.Codename.Method1.Value]);
    return;
end

%% Run the code

% cd down into the individual subject's data folder
cd(dataStruct.Info.Codename.Method1.Value);

if ~isfield(dataStruct.Info,'Mocap') % Ensure the proper type of data is present.
    return;
end

%% IF SUBJECT-LEVEL INFO WAS CHANGED.
%% Assign the subject-level info to projectStruct in base workspace
dataStruct.Info.ProcessedDone.(fName)=1;
subjInfoStruct.Info=dataStruct.Info;
assignin('base','tempStruct',subjInfoStruct); % Send trial struct to base workspace
evalin('base','projectStruct.Subject(sub).Info=tempStruct.Info;'); % Put trialStruct in to projectStruct variable.

%% Save the info to file. Assumed to enter this function from the 'Subject Data' folder.
save(['Metadata ' dataStruct.Info.Codename.Method1.Value ' ' projInfo.ProjectName '.mat'],'subjInfoStruct','-v6');

numTrials=length(currSubTrialsList);
for j=1:numTrials
    strTrialName=['TRIAL_' currSubTrialsList{j}(end-2:end)];
    
    numReps=length(dataStruct.(strTrialName).Info); % Number of reps in this trial
    
    for repNum=1:numReps
        
        % USE THE FIELD AND METHOD BEING GENERATED BY THIS FUNCTION TO CHECK IF IT'S ALREADY BEEN DONE.
        if isfield(dataStruct.(strTrialName).Info(repNum),'ProcessedDone') && isfield(dataStruct.(strTrialName).Info(repNum).ProcessedDone,fName) && dataStruct.(strTrialName).Info(repNum).ProcessedDone.(fName)==1 && projInfo.Flags.Redo==0
            disp(['SKIPPING ' fName ' ' dataStruct.Info.Codename.Method1.Value ' ' strTrialName]);
        else
            disp(['RUNNING ' fName ' ' dataStruct.Info.Codename.Method1.Value ' ' strTrialName]);
            
            startFrame=dataStruct.(strTrialName).Info(repNum).Mocap.StartFrame.Method1.Value;
            endFrame=dataStruct.(strTrialName).Info(repNum).Mocap.EndFrame.Method1.Value;
            
            %% TODO: Biomechanical operations.
            
            %% Assign the data to projectStruct in base workspace
            assign2base(dataStruct.(strTrialName),strTrialName); % Send trial struct to base workspace.
            
            %% Save the data to file. Assumed to enter this function from the 'Subject Data' folder.
            save2file(dataStruct,strTrialName);            
        end
    end
end